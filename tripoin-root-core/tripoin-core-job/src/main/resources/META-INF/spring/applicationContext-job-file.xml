<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
       	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       	xmlns:context="http://www.springframework.org/schema/context"
       	xmlns:oxm="http://www.springframework.org/schema/oxm"
       	xmlns:util="http://www.springframework.org/schema/util"
       	xmlns:p="http://www.springframework.org/schema/p"
       	xmlns:tx="http://www.springframework.org/schema/tx"
       	xmlns:aop="http://www.springframework.org/schema/aop"
       	xmlns:task="http://www.springframework.org/schema/task"
	   	xmlns:batch="http://www.springframework.org/schema/batch"  
       	xsi:schemaLocation="http://www.springframework.org/schema/beans
                           	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           	http://www.springframework.org/schema/context
                           	http://www.springframework.org/schema/context/spring-context-3.0.xsd
                           	http://www.springframework.org/schema/util
                           	http://www.springframework.org/schema/util/spring-util-3.0.xsd
                           	http://www.springframework.org/schema/oxm
                           	http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd
                           	http://www.springframework.org/schema/tx 
                           	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
                           	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                           	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
                           	http://www.springframework.org/schema/batch
							http://www.springframework.org/schema/batch/spring-batch-2.2.xsd">
	
	<bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>
	
	<!-- Must set this -->
	<bean
		class="org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor">
		<property name="jobRegistry" ref="jobRegistry" />
	</bean>

	<bean id="jobRegistry"
		class="org.springframework.batch.core.configuration.support.MapJobRegistry" />
	<!-- spring batch context -->
	
	<bean id="report" class="com.tripoin.test.dto.Report" scope="prototype" />
	<bean id="itemProcessor" class="com.tripoin.batch.processor.CustomItemProcessor" />

	<batch:job id="reportJob">
		<batch:step id="step1">
			<batch:tasklet>
				<batch:chunk reader="multiResourceReader" writer="xmlItemWriter" processor="itemProcessor" commit-interval="10"/>
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<bean id="multiResourceReader" class=" org.springframework.batch.item.file.MultiResourceItemReader">
		<property name="resources" value="${cron.job.file.path.in}RPT*.csv" />
		<property name="delegate" ref="flatFileItemReader" />
		<property name="strict" value="true"/>
	</bean>
	
	<bean id="flatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="id,sales,qty,staffName,date" />
					</bean>
				</property>
				<property name="fieldSetMapper">
				    <bean class="com.tripoin.batch.impl.ReportFieldSetMapper" />
				</property>
			</bean>
		</property>
	</bean>

	<bean id="xmlItemWriter" class="org.springframework.batch.item.xml.StaxEventItemWriter">
		<property name="resource" value="${cron.job.file.path.out}report.xml" />
		<property name="marshaller" ref="reportMarshaller" />
		<property name="rootTagName" value="report" />
	</bean>

	<bean id="reportMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="classesToBeBound">
			<list>
				<value>com.tripoin.test.dto.Report</value>
			</list>
		</property>
	</bean>

	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
				<property name="jobDetail" ref="jobDetail" />
				<property name="cronExpression" value="${cron.job.file.time}" />
			</bean>
		</property>
	</bean>

	<bean id="jobDetail" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="com.tripoin.batch.impl.JobLauncherFileImpl" />
		<property name="group" value="quartz-batch" />
		<property name="jobDataAsMap">
			<map>
				<entry key="jobName" value="reportJob" />
				<entry key="jobLocator" value-ref="jobRegistry" />
				<entry key="jobLauncher" value-ref="jobLauncher" />
				<entry key="param1" value="tripoin1" />
				<entry key="param2" value="tripoin2" />
			</map>
		</property>
	</bean>
</beans>